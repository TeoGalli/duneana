#include "ProtoDUNEDataUtils.fcl"
#include "ProtoDUNEBeamlineUtils.fcl"
#include "ProtoDUNEBeamlineReco.fcl"

#include "ProtoDUNEUnstableHVFilter.fcl"
#include "ProtoDUNEFembFilter.fcl"
#include "missingproductfilter.fcl"
#include "BeamEvent.fcl"
#include "RawDecoder.fcl"
#include "services_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "filters.fcl"
#include "signalservices_dune.fcl"
#include "caldata_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "ecalibration.fcl"
#include "triggeralgo_service.fcl"
#include "photpropservices_dune.fcl"
#include "protodune_tools_dune.fcl"

process_name: MichelStudy

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "michelstudydata.root" }
  TimeTracker: {}
  MemoryTracker: {}
  RandomNumberGenerator: {}                     #ART native random number generator
  @table::protodune_services
  message:      @local::standard_info
  FileCatalogMetadata: @local::art_file_catalog_mc
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "michelstudydata.root"    #default file name, can override from command line with -o or --output
   dataTier: "reconstructed"
   fastCloning: false
 } 
}

physics:
{
 producers:{}
 filters:  
 {
#   filter1:   @local::pdsp_fembfilter_all
   filter2:   @local::HVfilter 
   filter3:   @local::standard_missingproductfilter
 } 
 fpath: [filter2, filter3]
  
 analyzers:
 {
   michelstudydata:
   {
   module_type: "MichelStudy"
   SelectEvents: [fpath]
   }
 }
 
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 ana:  [ michelstudydata ]
 #ana: []
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 #trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 #end_paths:     [ stream1, ana ] 
 end_paths:     [  ana ] 
}

 # define the list of LArSoft modules to run through the simulate path
 #change TrackModuleLabel and CalorimetryModuleLabel here to "pmtrack" and "pmtrackcalo" or "pandoraTrack and pandoracalo" if required
 #physics.analyzers.michelstudydata.TrackModuleLabel:        "pmtrack"
 #physics.analyzers.michelstudydata.CalorimetryModuleLabel:  "pmtrackcalo"

 physics.analyzers.michelstudydata.GenieGenModuleLabel:      "generator"
 physics.analyzers.michelstudydata.CryGenModuleLabel:        "cosmicgenerator"
 physics.analyzers.michelstudydata.G4ModuleLabel:            "largeant"
 physics.analyzers.michelstudydata.ClusterModuleLabel:       "pandora" #linecluster"
 physics.analyzers.michelstudydata.MCShowerModuleLabel:      " "
 physics.analyzers.michelstudydata.MCTrackModuleLabel:       " "
 physics.analyzers.michelstudydata.HitsModuleLabel:          "hitpdune" #linecluster" 
 physics.analyzers.michelstudydata.TrackModuleLabel:         "pandoraTrack"
 physics.analyzers.michelstudydata.ShowerModuleLabel:        "pandoraShower" #"emshower"
 physics.analyzers.michelstudydata.PFPModuleLabel:           "pandora"
 physics.analyzers.michelstudydata.CalorimetryModuleLabel:   "pandoracaloSCE"
 physics.analyzers.michelstudydata.SpacePointSolverModuleLabel: "pandora"
 physics.analyzers.michelstudydata.OpFlashModuleLabelInt:    "opflashInternal" #opslicerInternal" 
 physics.analyzers.michelstudydata.OpFlashModuleLabelExt:    "opflashExternal" #opslicerExternal" 
 physics.analyzers.michelstudydata.OpHitModuleLabelInt:      "ssprawdecoder:internal" #ophitInternal"
 physics.analyzers.michelstudydata.OpHitModuleLabelExt:      "ssprawdecoder:external" #ophitExternal"
 physics.analyzers.michelstudydata.WfModuleLabelInt:         "ssprawdecoder:internal"
 physics.analyzers.michelstudydata.WfModuleLabelExt:         "ssprawdecoder:external"
 physics.analyzers.michelstudydata.WireModuleLabel:          "digitwire" #"caldata" "digitwire" "wclsdatasp:gauss"

 physics.analyzers.michelstudydata.SaveTrackInfo: true

# For running an old file (e.g MCC11)
#services.Geometry: @local::protodunev6_geo

#services.SpaceCharge.EnableSimSpatialSCE: true
#services.SpaceCharge.EnableCorrSCE: true
#services.SpaceCharge.EnableSimEfieldSCE: true
#services.SpaceCharge.EnableSimulationSCE: true

# Use channel map service for data
services.PdspChannelMapService:        @local::pdspchannelmap
